//
// User.java
// Autogenerated by plank
//
// DO NOT EDIT - EDITS WILL BE OVERWRITTEN
// @generated
//

package com.pinterest.models;

import android.support.annotation.IntDef;
import com.google.auto.value.AutoValue;
import java.net.URI;
import java.util.Set;
import android.support.annotation.Nullable;
import android.support.annotation.StringDef;
import java.lang.annotation.Retention;
import java.util.Date;
import java.util.List;
import java.lang.annotation.RetentionPolicy;
import java.util.Map;

public interface UserModel {
    @Nullable @UserEmailIntervalType String emailInterval();
    @Nullable String lastName();
    @Nullable String identifier();
    @Nullable Image image();
    @Nullable Map<String, Integer> counts();
    @Nullable Date createdAt();
    @Nullable String firstName();
    @Nullable String bio();
    @Nullable String username();
}

public interface UserModelBuilder {
    Builder setEmailInterval(@Nullable @UserEmailIntervalType String value);
    Builder setLastName(@Nullable String value);
    Builder setIdentifier(@Nullable String value);
    Builder setImage(@Nullable Image value);
    Builder setCounts(@Nullable Map<String, Integer> value);
    Builder setCreatedAt(@Nullable Date value);
    Builder setFirstName(@Nullable String value);
    Builder setBio(@Nullable String value);
    Builder setUsername(@Nullable String value);
    Builder setEmailInterval(@UserEmailIntervalType String value);
    Builder setLastName(String value);
    Builder setIdentifier(String value);
    Builder setImage(Image value);
    Builder setCounts(Map<String, Integer> value);
    Builder setCreatedAt(Date value);
    Builder setFirstName(String value);
    Builder setBio(String value);
    Builder setUsername(String value);
}

@AutoValue
public abstract class User {
    public static final String UNSET = "unset";
    public static final String IMMEDIATE = "immediate";
    public static final String DAILY = "daily";
    @StringDef({UNSET, IMMEDIATE, DAILY})
    @Retention(RetentionPolicy.SOURCE)
    public @interface UserEmailIntervalType {}
    public abstract @Nullable @UserEmailIntervalType String emailInterval();
    public abstract @Nullable String lastName();
    public abstract @Nullable String identifier();
    public abstract @Nullable Image image();
    public abstract @Nullable Map<String, Integer> counts();
    public abstract @Nullable Date createdAt();
    public abstract @Nullable String firstName();
    public abstract @Nullable String bio();
    public abstract @Nullable String username();
    public static Builder builder() {
        return new AutoValue_User.Builder();
    }
    abstract Builder toBuilder();
    @AutoValue.Builder
    public abstract static class Builder {
    
        public abstract Builder setEmailInterval(@Nullable @UserEmailIntervalType String value);
        public abstract Builder setLastName(@Nullable String value);
        public abstract Builder setIdentifier(@Nullable String value);
        public abstract Builder setImage(@Nullable Image value);
        public abstract Builder setCounts(@Nullable Map<String, Integer> value);
        public abstract Builder setCreatedAt(@Nullable Date value);
        public abstract Builder setFirstName(@Nullable String value);
        public abstract Builder setBio(@Nullable String value);
        public abstract Builder setUsername(@Nullable String value);
        public abstract Builder setEmailInterval(@UserEmailIntervalType String value);
        public abstract Builder setLastName(String value);
        public abstract Builder setIdentifier(String value);
        public abstract Builder setImage(Image value);
        public abstract Builder setCounts(Map<String, Integer> value);
        public abstract Builder setCreatedAt(Date value);
        public abstract Builder setFirstName(String value);
        public abstract Builder setBio(String value);
        public abstract Builder setUsername(String value);
        public abstract User build();
    
    }
}
