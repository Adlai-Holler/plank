// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"plank::plankPackageTests::ProductTarget" /* plankPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_109 /* Build configuration list for PBXAggregateTarget "plankPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_112 /* PBXTargetDependency */,
			);
			name = plankPackageTests;
			productName = plankPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		OBJ_100 /* ObjectiveCFileGenerator.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_24 /* ObjectiveCFileGenerator.swift */; };
		OBJ_101 /* ObjectiveCIR.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_25 /* ObjectiveCIR.swift */; };
		OBJ_102 /* ObjectiveCInitExtension.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_26 /* ObjectiveCInitExtension.swift */; };
		OBJ_103 /* ObjectiveCNSCodingExtension.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_27 /* ObjectiveCNSCodingExtension.swift */; };
		OBJ_104 /* Schema.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* Schema.swift */; };
		OBJ_105 /* SchemaLoader.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_29 /* SchemaLoader.swift */; };
		OBJ_106 /* StringExtensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_30 /* StringExtensions.swift */; };
		OBJ_55 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_61 /* Cli.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_32 /* Cli.swift */; };
		OBJ_62 /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_33 /* main.swift */; };
		OBJ_64 /* Core.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "plank::Core::Product" /* Core.framework */; };
		OBJ_72 /* LinuxTestIndex.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_36 /* LinuxTestIndex.swift */; };
		OBJ_73 /* MockSchemaLoader.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_37 /* MockSchemaLoader.swift */; };
		OBJ_74 /* ObjectiveCIRTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_38 /* ObjectiveCIRTests.swift */; };
		OBJ_75 /* ObjectiveCInitTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_39 /* ObjectiveCInitTests.swift */; };
		OBJ_76 /* PlankTestExtension.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_40 /* PlankTestExtension.swift */; };
		OBJ_77 /* StringExtensionsTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_41 /* StringExtensionsTests.swift */; };
		OBJ_79 /* Core.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "plank::Core::Product" /* Core.framework */; };
		OBJ_85 /* FileGenerator.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* FileGenerator.swift */; };
		OBJ_86 /* JSADTExtension.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* JSADTExtension.swift */; };
		OBJ_87 /* JSFileGenerator.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* JSFileGenerator.swift */; };
		OBJ_88 /* JSFileRenderer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* JSFileRenderer.swift */; };
		OBJ_89 /* JSIR.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* JSIR.swift */; };
		OBJ_90 /* JSModelRenderer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* JSModelRenderer.swift */; };
		OBJ_91 /* JSRuntimeFile.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* JSRuntimeFile.swift */; };
		OBJ_92 /* JavaFileGenerator.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* JavaFileGenerator.swift */; };
		OBJ_93 /* ObjCADTRenderer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* ObjCADTRenderer.swift */; };
		OBJ_94 /* ObjCFileRenderer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_18 /* ObjCFileRenderer.swift */; };
		OBJ_95 /* ObjCModelRenderer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* ObjCModelRenderer.swift */; };
		OBJ_96 /* ObjectiveCBuilderExtension.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* ObjectiveCBuilderExtension.swift */; };
		OBJ_97 /* ObjectiveCDebugExtension.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* ObjectiveCDebugExtension.swift */; };
		OBJ_98 /* ObjectiveCDictionaryExtension.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_22 /* ObjectiveCDictionaryExtension.swift */; };
		OBJ_99 /* ObjectiveCEqualityExtension.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_23 /* ObjectiveCEqualityExtension.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		814CB18F1FFED24D004125D5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "plank::Core";
			remoteInfo = Core;
		};
		814CB1901FFED24D004125D5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "plank::Core";
			remoteInfo = Core;
		};
		814CB1911FFED24D004125D5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "plank::CoreTests";
			remoteInfo = CoreTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		OBJ_10 /* JSADTExtension.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JSADTExtension.swift; sourceTree = "<group>"; };
		OBJ_11 /* JSFileGenerator.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JSFileGenerator.swift; sourceTree = "<group>"; };
		OBJ_12 /* JSFileRenderer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JSFileRenderer.swift; sourceTree = "<group>"; };
		OBJ_13 /* JSIR.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JSIR.swift; sourceTree = "<group>"; };
		OBJ_14 /* JSModelRenderer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JSModelRenderer.swift; sourceTree = "<group>"; };
		OBJ_15 /* JSRuntimeFile.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JSRuntimeFile.swift; sourceTree = "<group>"; };
		OBJ_16 /* JavaFileGenerator.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JavaFileGenerator.swift; sourceTree = "<group>"; };
		OBJ_17 /* ObjCADTRenderer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ObjCADTRenderer.swift; sourceTree = "<group>"; };
		OBJ_18 /* ObjCFileRenderer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ObjCFileRenderer.swift; sourceTree = "<group>"; };
		OBJ_19 /* ObjCModelRenderer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ObjCModelRenderer.swift; sourceTree = "<group>"; };
		OBJ_20 /* ObjectiveCBuilderExtension.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ObjectiveCBuilderExtension.swift; sourceTree = "<group>"; };
		OBJ_21 /* ObjectiveCDebugExtension.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ObjectiveCDebugExtension.swift; sourceTree = "<group>"; };
		OBJ_22 /* ObjectiveCDictionaryExtension.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ObjectiveCDictionaryExtension.swift; sourceTree = "<group>"; };
		OBJ_23 /* ObjectiveCEqualityExtension.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ObjectiveCEqualityExtension.swift; sourceTree = "<group>"; };
		OBJ_24 /* ObjectiveCFileGenerator.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ObjectiveCFileGenerator.swift; sourceTree = "<group>"; };
		OBJ_25 /* ObjectiveCIR.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ObjectiveCIR.swift; sourceTree = "<group>"; };
		OBJ_26 /* ObjectiveCInitExtension.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ObjectiveCInitExtension.swift; sourceTree = "<group>"; };
		OBJ_27 /* ObjectiveCNSCodingExtension.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ObjectiveCNSCodingExtension.swift; sourceTree = "<group>"; };
		OBJ_28 /* Schema.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Schema.swift; sourceTree = "<group>"; };
		OBJ_29 /* SchemaLoader.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SchemaLoader.swift; sourceTree = "<group>"; };
		OBJ_30 /* StringExtensions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StringExtensions.swift; sourceTree = "<group>"; };
		OBJ_32 /* Cli.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Cli.swift; sourceTree = "<group>"; };
		OBJ_33 /* main.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
		OBJ_36 /* LinuxTestIndex.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LinuxTestIndex.swift; sourceTree = "<group>"; };
		OBJ_37 /* MockSchemaLoader.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MockSchemaLoader.swift; sourceTree = "<group>"; };
		OBJ_38 /* ObjectiveCIRTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ObjectiveCIRTests.swift; sourceTree = "<group>"; };
		OBJ_39 /* ObjectiveCInitTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ObjectiveCInitTests.swift; sourceTree = "<group>"; };
		OBJ_40 /* PlankTestExtension.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PlankTestExtension.swift; sourceTree = "<group>"; };
		OBJ_41 /* StringExtensionsTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StringExtensionsTests.swift; sourceTree = "<group>"; };
		OBJ_42 /* CI */ = {isa = PBXFileReference; lastKnownFileType = folder; path = CI; sourceTree = SOURCE_ROOT; };
		OBJ_43 /* docs */ = {isa = PBXFileReference; lastKnownFileType = folder; path = docs; sourceTree = SOURCE_ROOT; };
		OBJ_44 /* Examples */ = {isa = PBXFileReference; lastKnownFileType = folder; path = Examples; sourceTree = SOURCE_ROOT; };
		OBJ_45 /* Utility */ = {isa = PBXFileReference; lastKnownFileType = folder; path = Utility; sourceTree = SOURCE_ROOT; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_9 /* FileGenerator.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FileGenerator.swift; sourceTree = "<group>"; };
		"plank::Core::Product" /* Core.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Core.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"plank::CoreTests::Product" /* CoreTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = CoreTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		"plank::plank::Product" /* plank */ = {isa = PBXFileReference; lastKnownFileType = text; path = plank; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_107 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_63 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_64 /* Core.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_78 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_79 /* Core.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_31 /* plank */ = {
			isa = PBXGroup;
			children = (
				OBJ_32 /* Cli.swift */,
				OBJ_33 /* main.swift */,
			);
			name = plank;
			path = Sources/plank;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_34 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_35 /* CoreTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_35 /* CoreTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_36 /* LinuxTestIndex.swift */,
				OBJ_37 /* MockSchemaLoader.swift */,
				OBJ_38 /* ObjectiveCIRTests.swift */,
				OBJ_39 /* ObjectiveCInitTests.swift */,
				OBJ_40 /* PlankTestExtension.swift */,
				OBJ_41 /* StringExtensionsTests.swift */,
			);
			name = CoreTests;
			path = Tests/CoreTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_46 /* Products */ = {
			isa = PBXGroup;
			children = (
				"plank::plank::Product" /* plank */,
				"plank::CoreTests::Product" /* CoreTests.xctest */,
				"plank::Core::Product" /* Core.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_34 /* Tests */,
				OBJ_42 /* CI */,
				OBJ_43 /* docs */,
				OBJ_44 /* Examples */,
				OBJ_45 /* Utility */,
				OBJ_46 /* Products */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* Core */,
				OBJ_31 /* plank */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* Core */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* FileGenerator.swift */,
				OBJ_10 /* JSADTExtension.swift */,
				OBJ_11 /* JSFileGenerator.swift */,
				OBJ_12 /* JSFileRenderer.swift */,
				OBJ_13 /* JSIR.swift */,
				OBJ_14 /* JSModelRenderer.swift */,
				OBJ_15 /* JSRuntimeFile.swift */,
				OBJ_16 /* JavaFileGenerator.swift */,
				OBJ_17 /* ObjCADTRenderer.swift */,
				OBJ_18 /* ObjCFileRenderer.swift */,
				OBJ_19 /* ObjCModelRenderer.swift */,
				OBJ_20 /* ObjectiveCBuilderExtension.swift */,
				OBJ_21 /* ObjectiveCDebugExtension.swift */,
				OBJ_22 /* ObjectiveCDictionaryExtension.swift */,
				OBJ_23 /* ObjectiveCEqualityExtension.swift */,
				OBJ_24 /* ObjectiveCFileGenerator.swift */,
				OBJ_25 /* ObjectiveCIR.swift */,
				OBJ_26 /* ObjectiveCInitExtension.swift */,
				OBJ_27 /* ObjectiveCNSCodingExtension.swift */,
				OBJ_28 /* Schema.swift */,
				OBJ_29 /* SchemaLoader.swift */,
				OBJ_30 /* StringExtensions.swift */,
			);
			name = Core;
			path = Sources/Core;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"plank::Core" /* Core */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_81 /* Build configuration list for PBXNativeTarget "Core" */;
			buildPhases = (
				OBJ_84 /* Sources */,
				OBJ_107 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Core;
			productName = Core;
			productReference = "plank::Core::Product" /* Core.framework */;
			productType = "com.apple.product-type.framework";
		};
		"plank::CoreTests" /* CoreTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_68 /* Build configuration list for PBXNativeTarget "CoreTests" */;
			buildPhases = (
				OBJ_71 /* Sources */,
				OBJ_78 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_80 /* PBXTargetDependency */,
			);
			name = CoreTests;
			productName = CoreTests;
			productReference = "plank::CoreTests::Product" /* CoreTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"plank::SwiftPMPackageDescription" /* plankPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_51 /* Build configuration list for PBXNativeTarget "plankPackageDescription" */;
			buildPhases = (
				OBJ_54 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = plankPackageDescription;
			productName = plankPackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"plank::plank" /* plank */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_57 /* Build configuration list for PBXNativeTarget "plank" */;
			buildPhases = (
				OBJ_60 /* Sources */,
				OBJ_63 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_65 /* PBXTargetDependency */,
			);
			name = plank;
			productName = plank;
			productReference = "plank::plank::Product" /* plank */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "plank" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_46 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"plank::SwiftPMPackageDescription" /* plankPackageDescription */,
				"plank::plank" /* plank */,
				"plank::CoreTests" /* CoreTests */,
				"plank::Core" /* Core */,
				"plank::plankPackageTests::ProductTarget" /* plankPackageTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_54 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_55 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_60 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_61 /* Cli.swift in Sources */,
				OBJ_62 /* main.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_71 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_72 /* LinuxTestIndex.swift in Sources */,
				OBJ_73 /* MockSchemaLoader.swift in Sources */,
				OBJ_74 /* ObjectiveCIRTests.swift in Sources */,
				OBJ_75 /* ObjectiveCInitTests.swift in Sources */,
				OBJ_76 /* PlankTestExtension.swift in Sources */,
				OBJ_77 /* StringExtensionsTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_84 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_85 /* FileGenerator.swift in Sources */,
				OBJ_86 /* JSADTExtension.swift in Sources */,
				OBJ_87 /* JSFileGenerator.swift in Sources */,
				OBJ_88 /* JSFileRenderer.swift in Sources */,
				OBJ_89 /* JSIR.swift in Sources */,
				OBJ_90 /* JSModelRenderer.swift in Sources */,
				OBJ_91 /* JSRuntimeFile.swift in Sources */,
				OBJ_92 /* JavaFileGenerator.swift in Sources */,
				OBJ_93 /* ObjCADTRenderer.swift in Sources */,
				OBJ_94 /* ObjCFileRenderer.swift in Sources */,
				OBJ_95 /* ObjCModelRenderer.swift in Sources */,
				OBJ_96 /* ObjectiveCBuilderExtension.swift in Sources */,
				OBJ_97 /* ObjectiveCDebugExtension.swift in Sources */,
				OBJ_98 /* ObjectiveCDictionaryExtension.swift in Sources */,
				OBJ_99 /* ObjectiveCEqualityExtension.swift in Sources */,
				OBJ_100 /* ObjectiveCFileGenerator.swift in Sources */,
				OBJ_101 /* ObjectiveCIR.swift in Sources */,
				OBJ_102 /* ObjectiveCInitExtension.swift in Sources */,
				OBJ_103 /* ObjectiveCNSCodingExtension.swift in Sources */,
				OBJ_104 /* Schema.swift in Sources */,
				OBJ_105 /* SchemaLoader.swift in Sources */,
				OBJ_106 /* StringExtensions.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_112 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "plank::CoreTests" /* CoreTests */;
			targetProxy = 814CB1911FFED24D004125D5 /* PBXContainerItemProxy */;
		};
		OBJ_65 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "plank::Core" /* Core */;
			targetProxy = 814CB18F1FFED24D004125D5 /* PBXContainerItemProxy */;
		};
		OBJ_80 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "plank::Core" /* Core */;
			targetProxy = 814CB1901FFED24D004125D5 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_110 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_111 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_52 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 3 -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/3 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 3.0;
			};
			name = Debug;
		};
		OBJ_53 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 3 -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/3 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 3.0;
			};
			name = Release;
		};
		OBJ_58 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = plank.xcodeproj/plank_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx @executable_path";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_FORCE_DYNAMIC_LINK_STDLIB = YES;
				SWIFT_FORCE_STATIC_LINK_STDLIB = NO;
				SWIFT_VERSION = 3.0;
				TARGET_NAME = plank;
			};
			name = Debug;
		};
		OBJ_59 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = plank.xcodeproj/plank_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx @executable_path";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_FORCE_DYNAMIC_LINK_STDLIB = YES;
				SWIFT_FORCE_STATIC_LINK_STDLIB = NO;
				SWIFT_VERSION = 3.0;
				TARGET_NAME = plank;
			};
			name = Release;
		};
		OBJ_69 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = plank.xcodeproj/CoreTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 3.0;
				TARGET_NAME = CoreTests;
			};
			name = Debug;
		};
		OBJ_70 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = plank.xcodeproj/CoreTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 3.0;
				TARGET_NAME = CoreTests;
			};
			name = Release;
		};
		OBJ_82 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = plank.xcodeproj/Core_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Core;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 3.0;
				TARGET_NAME = Core;
			};
			name = Debug;
		};
		OBJ_83 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = plank.xcodeproj/Core_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Core;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 3.0;
				TARGET_NAME = Core;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_109 /* Build configuration list for PBXAggregateTarget "plankPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_110 /* Debug */,
				OBJ_111 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_2 /* Build configuration list for PBXProject "plank" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_51 /* Build configuration list for PBXNativeTarget "plankPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_52 /* Debug */,
				OBJ_53 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_57 /* Build configuration list for PBXNativeTarget "plank" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_58 /* Debug */,
				OBJ_59 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_68 /* Build configuration list for PBXNativeTarget "CoreTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_69 /* Debug */,
				OBJ_70 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_81 /* Build configuration list for PBXNativeTarget "Core" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_82 /* Debug */,
				OBJ_83 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
